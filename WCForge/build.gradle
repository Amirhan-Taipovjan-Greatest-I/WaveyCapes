buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io/' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
    maven { url 'https://repo.sk1er.club/repository/maven-releases/' }
}

archivesBaseName = "waveycapes-forge" + "-mc" + project.minecraft_version
version = project.mod_version
group = project.maven_group

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
//    clientRunArgs += "--tweakClass" 
//    clientRunArgs += "org.spongepowered.asm.launch.MixinTweaker"
//    clientRunArgs += "--mixin" 
//    clientRunArgs += "waveycapes.mixins.json"
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
    configurations.runtimeOnly.canBeResolved = true
}


repositories {
    jcenter()
    maven {
        url "https://repo.codemc.io/repository/maven-public/"
    }
    maven {
        name "spongepowered"
        url "https://repo.spongepowered.org/maven/"
    }
    maven { url 'https://jitpack.io' } //fabric asm
    maven { url 'https://repo.sk1er.club/repository/maven-releases/' }
    maven {
        url "https://repo.codemc.io/repository/maven-public/"
    }
	maven { url "https://maven.legacyfabric.net"}
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    annotationProcessor 'org.spongepowered:mixin:0.8.5'
    annotationProcessor 'com.google.code.gson:gson:2.9.0'
    annotationProcessor 'com.google.guava:guava:31.1-jre'
    annotationProcessor 'org.ow2.asm:asm:9.3'
    annotationProcessor 'org.ow2.asm:asm-tree:9.3'

    include 'org.spongepowered:mixin:0.8.5'

}

shadowJar {
    finalizedBy('reobfJar') 
    archiveClassifier.set('')
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    exclude 'pack.mcmeta'
    exclude 'dummyThing'
    exclude '**/module-info.class'
    exclude '*.so'
    exclude '*.dylib'
    exclude '*.dll'
    exclude '*.jnilib'
    exclude 'ibxm/**'
    exclude 'com/jcraft/**'
    exclude 'org/lwjgl/**'
    exclude 'net/java/**'

    exclude 'META-INF/proguard/**'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/versions/**'
    exclude 'META-INF/com.android.tools/**'

    exclude 'fabric.mod.json'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', '1.12.2'
    inputs.property 'name', 'waveycapes'
    inputs.property 'modid', 'waveycapes'
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand (
                'version':project.version,
                'mcversion':'1.12.2',
                'name':'waveycapes',
                'modid': 'waveycapes'
        )
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    from "${project.rootDir}/LICENSE"
}

// move resources so they can be accessed at runtime
task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

jar {
    finalizedBy('shadowJar') 
    manifest.attributes(
            "ForceLoadAsMod": true,
            "ModSide": "CLIENT",
            "MixinConfigs": 'waveycapes.mixins.json',
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": 0,
            "Manifest-Version": 1.0
    )
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv = 'searge'
}


sourceSets {
    main {
        ext.refMap = "waveycapes.refmap.json"
    }
}


//reobfJar.dependsOn(shadowJar)
//tasks.getByPath(':waveycapes-Forge:reobfJar').dependsOn(shadowJar)
