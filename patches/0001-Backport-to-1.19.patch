From 6dcf49594014830471c94254d23e4aecdecca1d6 Mon Sep 17 00:00:00 2001
From: tr7zw <tr7zw@live.de>
Date: Sun, 22 Jan 2023 01:26:16 +0100
Subject: [PATCH] Backport to 1.19

---
 .../dev/tr7zw/waveycapes/WaveyCapesBase.java  | 10 ++++-----
 .../renderlayers/CustomCapeRenderLayer.java   | 21 +++++++++----------
 WCFabric/src/main/resources/fabric.mod.json   |  3 ++-
 WCForge/src/main/resources/META-INF/mods.toml |  4 ++--
 WCForge/src/main/resources/pack.mcmeta        |  5 +++--
 gradle-compose.yml                            |  6 +++---
 6 files changed, 25 insertions(+), 24 deletions(-)

diff --git a/Shared/src/main/java/dev/tr7zw/waveycapes/WaveyCapesBase.java b/Shared/src/main/java/dev/tr7zw/waveycapes/WaveyCapesBase.java
index 6ece423..c56aa29 100644
--- a/Shared/src/main/java/dev/tr7zw/waveycapes/WaveyCapesBase.java
+++ b/Shared/src/main/java/dev/tr7zw/waveycapes/WaveyCapesBase.java
@@ -9,14 +9,14 @@ import java.util.List;
 
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
-import org.joml.Quaternionf;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.mojang.blaze3d.platform.Lighting;
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.PoseStack;
-import com.mojang.math.Axis;
+import com.mojang.math.Quaternion;
+import com.mojang.math.Vector3f;
 
 import dev.tr7zw.config.CustomConfigScreen;
 import dev.tr7zw.waveycapes.config.Config;
@@ -145,8 +145,8 @@ public abstract class WaveyCapesBase {
         PoseStack matrixStack = new PoseStack();
         matrixStack.translate(0.0D, 1, 1000.0D);
         matrixStack.scale((float) size, (float) size, (float) size);
-        Quaternionf quaternion = Axis.ZP.rotationDegrees(180.0F);
-        Quaternionf quaternion2 = Axis.XP.rotationDegrees(lookY * rotationModifyer);
+        Quaternion quaternion = Vector3f.ZP.rotationDegrees(180.0F);
+        Quaternion quaternion2 = Vector3f.XP.rotationDegrees(lookY * rotationModifyer);
         quaternion.mul(quaternion2);
         matrixStack.mulPose(quaternion);
         matrixStack.translate(0.0D, -1, 0D);
@@ -170,7 +170,7 @@ public abstract class WaveyCapesBase {
         livingEntity.yHeadRotO = livingEntity.getYRot();
         Lighting.setupForEntityInInventory();
         EntityRenderDispatcher entityRenderDispatcher = Minecraft.getInstance().getEntityRenderDispatcher();
-        quaternion2.conjugate();
+        quaternion2.conj();
         entityRenderDispatcher.overrideCameraOrientation(quaternion2);
         entityRenderDispatcher.setRenderShadow(false);
         MultiBufferSource.BufferSource bufferSource = Minecraft.getInstance().renderBuffers().bufferSource();
diff --git a/Shared/src/main/java/dev/tr7zw/waveycapes/renderlayers/CustomCapeRenderLayer.java b/Shared/src/main/java/dev/tr7zw/waveycapes/renderlayers/CustomCapeRenderLayer.java
index fa8c493..b788ac2 100644
--- a/Shared/src/main/java/dev/tr7zw/waveycapes/renderlayers/CustomCapeRenderLayer.java
+++ b/Shared/src/main/java/dev/tr7zw/waveycapes/renderlayers/CustomCapeRenderLayer.java
@@ -1,11 +1,10 @@
 package dev.tr7zw.waveycapes.renderlayers;
 
-import org.joml.Matrix4f;
-
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.VertexConsumer;
-import com.mojang.math.Axis;
+import com.mojang.math.Matrix4f;
+import com.mojang.math.Vector3f;
 
 import dev.tr7zw.waveycapes.CapeHolder;
 import dev.tr7zw.waveycapes.CapeMovement;
@@ -208,15 +207,15 @@ public class CustomCapeRenderLayer extends RenderLayer<AbstractClientPlayer, Pla
 
         
         // vanilla rotating and wind
-        poseStack.mulPose(Axis.XP.rotationDegrees(6.0F + height + naturalWindSwing));
-        poseStack.mulPose(Axis.ZP.rotationDegrees(sidewaysRotationOffset / 2.0F));
-        poseStack.mulPose(Axis.YP.rotationDegrees(180.0F - sidewaysRotationOffset / 2.0F));
+        poseStack.mulPose(Vector3f.XP.rotationDegrees(6.0F + height + naturalWindSwing));
+        poseStack.mulPose(Vector3f.ZP.rotationDegrees(sidewaysRotationOffset / 2.0F));
+        poseStack.mulPose(Vector3f.YP.rotationDegrees(180.0F - sidewaysRotationOffset / 2.0F));
         poseStack.translate(-z/partCount, y/partCount, x/partCount); // movement from the simulation
         //offsetting so the rotation is on the cape part
         //float offset = (float) (part * (16 / partCount))/16; // to fold the entire cape into one position for debugging
         poseStack.translate(0, /*-offset*/ + (0.48/16) , - (0.48/16)); // (0.48/16)
         poseStack.translate(0, part * 1f/partCount, part * (0)/partCount);
-        poseStack.mulPose(Axis.XP.rotationDegrees(-partRotation)); // apply actual rotation
+        poseStack.mulPose(Vector3f.XP.rotationDegrees(-partRotation)); // apply actual rotation
         // undoing the rotation
         poseStack.translate(0, -part * 1f/partCount, -part * (0)/partCount);
         poseStack.translate(0, -(0.48/16), (0.48/16));
@@ -262,10 +261,10 @@ public class CustomCapeRenderLayer extends RenderLayer<AbstractClientPlayer, Pla
         }
 
         float naturalWindSwing = getNatrualWindSwing(part, abstractClientPlayer.isUnderWater());
-
-        poseStack.mulPose(Axis.XP.rotationDegrees(6.0F + swing / 2.0F + height + naturalWindSwing));
-        poseStack.mulPose(Axis.ZP.rotationDegrees(sidewaysRotationOffset / 2.0F));
-        poseStack.mulPose(Axis.YP.rotationDegrees(180.0F - sidewaysRotationOffset / 2.0F));
+        
+        poseStack.mulPose(Vector3f.XP.rotationDegrees(6.0F + swing / 2.0F + height + naturalWindSwing));
+        poseStack.mulPose(Vector3f.ZP.rotationDegrees(sidewaysRotationOffset / 2.0F));
+        poseStack.mulPose(Vector3f.YP.rotationDegrees(180.0F - sidewaysRotationOffset / 2.0F));
     }
     
     private float getNatrualWindSwing(int part, boolean underwater) {
diff --git a/WCFabric/src/main/resources/fabric.mod.json b/WCFabric/src/main/resources/fabric.mod.json
index eb8926b..cde5c7c 100644
--- a/WCFabric/src/main/resources/fabric.mod.json
+++ b/WCFabric/src/main/resources/fabric.mod.json
@@ -30,6 +30,7 @@
   ],
 
   "depends": {
-    "minecraft": ">=1.19.3"
+    "minecraft": ">1.19.0 <=1.19.2",
+    "java": ">=16"
   }
 }
diff --git a/WCForge/src/main/resources/META-INF/mods.toml b/WCForge/src/main/resources/META-INF/mods.toml
index 46adae2..a8c0e15 100644
--- a/WCForge/src/main/resources/META-INF/mods.toml
+++ b/WCForge/src/main/resources/META-INF/mods.toml
@@ -9,7 +9,7 @@ version="1.3.2"
 displayName="WaveyCapes Mod"
 displayURL="https://www.curseforge.com/minecraft/mc-mods/waveycapes"
 # A file name (in the root of the mod JAR) containing a logo for display
-logoFile="assets/waveycapes/icon.png"
+#logoFile="assets/waveycapes/icon.png"
 authors="tr7zw"
 description='''
 The cape shouldn't be a static slab
@@ -17,6 +17,6 @@ The cape shouldn't be a static slab
 [[dependencies.waveycapes]]
     modId="minecraft"
     mandatory=true
-    versionRange="[1.19.3,)"
+    versionRange="[1.19,)"
     ordering="NONE"
     side="BOTH"
\ No newline at end of file
diff --git a/WCForge/src/main/resources/pack.mcmeta b/WCForge/src/main/resources/pack.mcmeta
index 749fcf1..e1d2022 100644
--- a/WCForge/src/main/resources/pack.mcmeta
+++ b/WCForge/src/main/resources/pack.mcmeta
@@ -1,6 +1,7 @@
 {
   "pack": {
-    "description": "Resources for WaveyCapes",
-    "pack_format": 10
+    "description": "Resources for examplemod",
+    "pack_format": 6,
+    "_comment": "pack_format 6 is the current format for Minecraft >= 1.16.3. Be aware may have changed by the time you use this template!"
   }
 }
diff --git a/gradle-compose.yml b/gradle-compose.yml
index 7502cc1..7f0be62 100644
--- a/gradle-compose.yml
+++ b/gradle-compose.yml
@@ -1,5 +1,5 @@
 version: '0.0.2'
-source: "https://github.com/tr7zw/ModComposeTemplate/tree/1.19.3"
+source: "https://github.com/tr7zw/ModComposeTemplate/tree/1.19.2"
 replacements:
   name: "WaveyCapes"
   id: "waveycapes"
@@ -22,11 +22,11 @@ subProjects:
       dependencies: '
       modCompileOnly "curse.maven:morebanners-515000:3820969"
       
-      modCompileOnly "curse.maven:minecraftcapes-mod-359836:4019976"
+      modCompileOnly "curse.maven:minecraftcapes-mod-359836:3821433"
       '
   WCForge:
     template: "Forge"
     replacements:
       dependencies: '
-      modImplementation "curse.maven:minecraftcapes-mod-359836:4019977"
+      modImplementation "curse.maven:minecraftcapes-mod-359836:3821435"
       '
\ No newline at end of file
-- 
2.32.0.windows.2

